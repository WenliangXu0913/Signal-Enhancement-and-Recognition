clear;clc
Fs=44100*0.8;
window=sqrt(hann(128));    
%信号分帧加正弦窗，还原信号再加正弦窗，分帧信号错位相加，避免信号连接处出现畸变。
nfft=128;
noverlap=length(window)/2;
SNRin=[-5,-10,-15,-20];
[traindata,trainlabel]=gettraindata_log(window,noverlap,nfft,Fs,SNRin);
n = randperm(size(traindata,4));
label_train=trainlabel(:,:,:,n(1:floor(length(n)*0.8)));
input_train=traindata(:,:,:,n(1:floor(length(n)*0.8)));
label_test=trainlabel(:,:,:,n(floor(length(n)*0.8)+1:end));
input_test=traindata(:,:,:,n(floor(length(n)*0.8)+1:end));
%%
options=trainingOptions("adam",...
    'MiniBatchSize',64,...
    'InitialLearnRate',1e-3,...
    'LearnRateSchedule',"piecewise",...
    'LearnRateDropPeriod',1,...
    'LearnRateDropFactor',0.85,...
    'MaxEpochs',50,...
    'ValidationFrequency',5000,...
    'ValidationData',{input_test,label_test},...
    'Shuffle','every-epoch',...
    'ExecutionEnvironment','gpu',...
    'Plots','training-progress');
layers = creatlayers_log_res4_ceshi3CBAM_r4_Sim_1_Res2;
net = trainNetwork(input_train,label_train,layers,options);
save('DnCNN-CBAM-MIX-64-[-5-5-30]-085-50','net');